<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.3">
  <zoom_level>6</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2286</x>
      <y>1158</y>
      <w>192</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
IMethod
--
--
+ getName() String
+ setName(String name) void
+ getAccessLevel() String
+ setAccessLevel(String access) void
+ getDesc() String
+ setDesc(String desc) void
+ getExceptions() String[]
+ setExceptions(String[] exceptions) void
+ getReturnType() String
+ setReturnType(String type) void
+ addArgument(String arg) void
+ getArguments() List&lt;String&gt;
+ toString() String
+ getInnerCalls(): List&lt;MethodContainer&gt;
+ addInnerCall(MethodContainer innerCall): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1650</x>
      <y>1158</y>
      <w>150</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
IField
--
--
+ getName() String
+ setName(String name) void
+ getDesc() String
+ setDesc(String desc) void
+ getSignature() String
+ setSignature(String sign) void
+ getValue() Object
+ setValue(Object value) void
+ getAccessLevel() String
+ setAccessLevel(String access) void
+ toString() String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1890</x>
      <y>786</y>
      <w>150</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
IModel
--
--
+ addClass(IClass currentClass): void
+ getClasses(): List&lt;IClass&gt;
+ getRelations(): List&lt;IRelation&gt;
+ addRelation(IRelation relation): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1812</x>
      <y>534</y>
      <w>318</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>DesignParser
--
--
+ main(String[] args) void
+ parser(String args[]) void
- commandConsole(IModel model, HashMap&lt;String, IInvoker&gt; stream): void
- SDLogic(String line, Scanner scanner, IInvoker stream): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>834</x>
      <y>990</y>
      <w>390</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>ClassDeclarationVisitor
--
- IClass: currentClass
- String[]: currectClass
--
+ visit(int version, int access, String name, String signature, String superName, String[] interfaces): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>876</x>
      <y>912</y>
      <w>348</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>ClassFieldVisitor
--
- IClass: currentClass
--
+ visitField(int access, String name, String desc, String signature, Object value): FieldVisitor 
addAccessLevel(int access, IField currentField): void </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1020</x>
      <y>654</y>
      <w>390</w>
      <h>138</h>
    </coordinates>
    <panel_attributes>ClassVisitor
--
# api: int
# cv: ClassVisitor
--
+ visit(int version, int access, String name, String signature, String superName, String[] interfaces): void
+ visitSource(String source, String debug): void
+ visitOuterClass(String owner, String name, String desc): void
+ visitAnnotation(String desc, boolean visible): AnnotationVisitor
+ visitTypeAnnotation(int typeRef, TypePath typePath, String desc, boolean visible): AnnotationVisitor
+ visitAttribute(Attribute attr): void
+ visitInnerClass(String name, String outerName, String innerName, int access): void
+ visitField(int access, String name, String desc, String signature, Object value): FieldVisitor
+ visitMethod(int access, String name, String desc, String signature, String[] exceptions): MethodVisitor
+ visitEnd(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1890</x>
      <y>912</y>
      <w>150</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>Model
--
- List&lt;IClass&gt; classes
- List&lt;IRelation&gt; relations 
--
+ addClass(IClass currentClass): void
+ getClasses(): List&lt;IClass&gt;
+ accept(IVisitor v): void
+ addRelation(IRelation relation): void
+ getRelations(): List&lt;IRelation&gt; 
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2250</x>
      <y>1788</y>
      <w>192</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>Method
--
- String name
- String accessLevel
- String desc
- String[] exceptions
- String returnType
- List&lt;String&gt; arguments
- List&lt;MethodContainer&gt; innerCalls
--
+ getName() String
+ setName(String name) void
+ getAccessLevel() String
+ setAccessLevel(String access) void
+ getDesc() String
+ setDesc(String desc) void
+ getExceptions() String[]
+ setExceptions(String[] exceptions) void
+ getReturnType() String
+ setReturnType(String type) void
+ addArgument(String arg) void
+ getArguments() List&lt;String&gt;
+ getInnerCalls(): List&lt;MethodContainer&gt;
+ addInnerCall(MethodContainer innerCall): void
+ accept(IVisitor v): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1650</x>
      <y>1566</y>
      <w>150</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>Field
--
- String name
- String desc
- String signature
- Object value
- String accessLevel
--
+ getName() String
+ setName(String name) void
+ getDesc() String
+ setDesc(String desc) void
+ getSignature() String
+ setSignature(String sign) void
+ getValue() Object
+ setValue(Object value) void
+ getAccessLevel() String
+ setAccessLevel(String access) void
+ accept(IVisitor v): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1878</x>
      <y>1158</y>
      <w>162</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
IClass
--
--
+getIMethods(): Collection&lt;IMethod&gt;
+getIField(): Collection&lt;IField&gt;
+getAcessLevel(): int
+getSignature(): String
+getClassName(): String
+getClassVersion(): double
+getSuperName(): IClass
+getInterface(): Collection&lt;String&gt;
+getExtension(): String
+addIMethod(IMethod method): void
+addIField(IField field): void
+setAccessLevel(int access): void
+setSignature(String signature): void
+setClassName(String name): void
+setClassVersion(double version): void
+setSuperName(IClass name): void
+addInterface(String inter): void
+setExtension(String extension): void
+toString(): String
+ addPattern(IPattern pattern): void
+ getPatterns(): List&lt;IPattern&gt; </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1878</x>
      <y>1566</y>
      <w>162</w>
      <h>342</h>
    </coordinates>
    <panel_attributes>ConcreteClass
--
- Collection&lt;IMethod&gt; methodList
- Collection&lt;IField&gt; fieldList
- int accessLevel
- String signature
- String name
- double version
- IClass superClass
- Collection&lt;String&gt; interfaceList
- String extension
- List&lt;IPattern&gt; patternList
--
+ getIMethods(): Collection&lt;IMethod&gt;
+ getIField(): Collection&lt;IField&gt;
+ getAcessLevel(): int
+ getSignature(): String
+ getClassName(): String
+ getClassVersion(): double
+ getSuperName(): IClass
+ getInterface(): Collection&lt;String&gt;
+ getExtension(): String
+ addIMethod(IMethod method): void
+ addIField(IField field): void
+ setAccessLevel(int access): void
+ setSignature(String signature): void
+ setClassName(String name): void
+ setClassVersion(double version): void
+ setSuperName(IClass name): void
+ addInterface(String inter): void
+ setExtension(String extension): void
+ addArrow(IArrow arrow): void
+ getArrows(): Collection&lt;IArrow&gt;
+ accept(IVisitor v): void
+ addPattern(IPattern pattern): void
+ getPatterns(): List&lt;IPattern&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>798</y>
      <w>336</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>myMethodVisitor
--
- currentClass: IClass
- classes: String[]
--
+ visitFieldInsn(int opcode, String owner, String name, String desc): void
+ visitMethodInsn(int opcode, String owner, String name, String desc, boolean itf): void
+ visitFieldInsn(int opcode, String owner, String name, String desc): void
+ visitTypeInsn(int opcode, String type): void
+ visitVarInsn(int opcode, int var): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>402</x>
      <y>690</y>
      <w>384</w>
      <h>342</h>
    </coordinates>
    <panel_attributes>/MethodVisitor/
--
# api: final int
# mv: MethodVisitor
--
+ visitAnnotation(String, boolean): AnnotationVisitor
+ visitAnnotationDefault(): AnnotationVisitor
+ visitAttribute(Attribute): void
+ visitCode(): void
+ visitEnd(): void
+ visitFieldInsn(int, String, String, String): void
+ visitFrame(int, int, Object[], int, Object[]): void
+ visitIincInsn(int, int): void
+ visitInsn(int): void
+ visitInsnAnnotation(int, TypePath, String, boolean): AnnotationVisitor
+ visitIntInsn(int, int): void
+ visitInvokeDynamicInsn(String, String, Handle, Object...): void
+ visitJumpInsn(int, Label): void
+ visitLabel(Label): void
+ visitLdcInsn(Object): void
+ visitLineNumber(int, Label): void
+ visitLocalVariable(String, String, String, Label, Label, int): void
+ visitLocalVariableAnnotation(int, TypePath, Label[], Label[], int[], String, boolean): AnnotationVisitor
+ visitLookupSwitchInsn(Label, int[], Label[]): void
+ visitMaxs(int, int): void
+ visitMethodInsn(int, String, String, String): void
+ visitMethodInsn(int, String, String, String, boolean): void
+ visitMultiANewArrayInsn(String, int): void
+ visitParameter(String, int): void
+ visitParameterAnnotation(int, String, boolean): AnnotationVisitor
+ visitTableSwitchInsn(int, int, Label, Label...): void
+ visitTryCatchAnnotation(int, TypePath, String, boolean)
+ visitTryCatchBlock(Label, Label, Label, String): void
+ visitTypeAnnotation(int, TypePath, String, boolean): AnnotationVisitor
+ visitTypeInsn(int, String): void
+ visitVarInsn(int, int): void 
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>834</x>
      <y>810</y>
      <w>390</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>ClassMethodVisitor
--
-currentClass: IClass
-classes: String[]
--
+visitMethod(int access, String name, String desc, String signature, String[] exceptions): MethodVisitor
~addAccessLevel(int access, IMethod currentMethod): void
~addReturnType(String desc, String signature, IMethod currentMethod): void
~addArguments(String desc, String signature, IMethod currentMethod): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2544</x>
      <y>1158</y>
      <w>198</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>MethodContainer
--
-instantiation: boolean
-goingToClass: String
-goingFromClass: String
-goingToMethod: String
-desc: String
--
+isInstantiation(): boolean
+setInstantiation(boolean instantiation): void
+getGoingToClass(): String
+setGoingToClass(String goingToClass): void
+getGoingFromClass(): String
+setGoingFromClass(String goingFromClass): void
+getGoingToMethod(): String
+setGoingToMethod(String methodName): void
+setDesc(String desc): void
+getDesc(): String

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2958</x>
      <y>636</y>
      <w>264</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>IVisitor
&lt;&lt;interface&gt;&gt;
--
--
+ preVisit(ITraverser c): void
+ visit(ITraverser c): void
+ postVisit(ITraverser c): void
+ addVisit(VisitType visitType, Class&lt;?&gt; clazz, IVisitMethod m): void
+ removeVisit(VisitType visitType, Class&lt;?&gt; clazz): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3036</x>
      <y>522</y>
      <w>120</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>LookupKey
--
-visitType: VisitType
-targetType: Class&lt;?&gt;
--
+ hashCode(): int
+ equals(Object obj): boolean
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2328</x>
      <y>804</y>
      <w>108</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>ITraverser
&lt;&lt;interface&gt;&gt;
--
--
+accept(IVisitor v): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3264</x>
      <y>552</y>
      <w>114</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>IVisitMethod
&lt;&lt;interface&gt;&gt;
--
--
+execute(ITraverser t): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2964</x>
      <y>120</y>
      <w>336</w>
      <h>276</h>
    </coordinates>
    <panel_attributes>SequenceOutputStream
--
+ String GENERATOR_NAME
- String ERROR_ITEM_NOT_FOUND
- String ERROR_EXCEPTION
- String SYSTEM_OUTPUT_FILE
- Visitor visitor
- int callDepth
- String methodName
- String className
- String parameters
- int counter
- Map&lt;String, String&gt; variables
- List&lt;String&gt; instances
- List&lt;String&gt; classList
- List&lt;String&gt; methodList
- boolean first
--
+ initializeString(String class, String method, String desc, int callDepth): void
+ write(IModel model): void
+ setUpVisitModel(): void
- getModelClass(String name, IModel m): IClass
- recursiveGenerateGraph(String class, String varName, String method, String desc, 
                                                         int depth, IModel model): void
                                                         
- recursiveMethodGenerator(IMethod m, String varName, int depth, IModel model): void
- getMethod(IClass c, List&lt;String&gt; params, String method): IMethod
- getReturnType(MethodContainer innerCall): String
- getArgs(MethodContainer innerCall): String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2172</x>
      <y>204</y>
      <w>186</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>UMLOutputStream
--
- IVisitor visitor
- List&lt;String&gt; hasClassNames
- Map&lt;String, IRelation&gt; useRelationList
--
- visitHasRelation(): void
- visitUsesRelation(): void
- visitInterfaceRelation(): void
- visitExtensionRelation(): void 
- setupPreVisitModel(): void
- postVisitModel(): void
- setupPreVisitModel(): void
- visitClass(): void
- postVistClass(): void
- visitField(): void
- visitMethod(): void
- trimValue(String initial, String delimiter): String
+ write(IModel model): void
- parsePointerClass(String classPath): String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2958</x>
      <y>756</y>
      <w>264</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>Visitor
--
- Map&lt;LookupKey, IVisitMethod&gt; keyToMethodMap
--
+ preVisit(ITraverser c): void
+ visit(ITraverser c): void
+ postVisit(ITraverser c): void
+ addVisit(VisitType visitType, Class&lt;?&gt; clazz, IVisitMethod m): void
+ removeVisit(VisitType visitType, Class&lt;?&gt; clazz): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2868</x>
      <y>522</y>
      <w>78</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
VisitType
--
PreVisit
Visit
PostVisit</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1446</x>
      <y>1164</y>
      <w>168</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>IRelation
&lt;&lt;interface&gt;&gt;
--
--
+ drawRelation(): String
+ setFromObject(String startObject): void
+ setToObject(String endObject): void
+ getFromObject(): String
+ getToObject(): String
+ addProperty(String property): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2004</x>
      <y>1428</y>
      <w>108</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>IPattern
&lt;&lt;interface&gt;&gt;
--
--
+ getProperty(): String
+ getLabel(): String
+ getClassName(): String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2640</x>
      <y>534</y>
      <w>120</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>IInvoker
&lt;&lt;interface&gt;&gt;
--
--
+ write(IModel model): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2394</x>
      <y>264</y>
      <w>114</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>CompositeVisitor
--
- IVisitor visitor
- Map&lt;String, String&gt; abstractToInterface
- List&lt;IClass&gt; possibleComposites
- List&lt;String&gt; possibleComponents
- boolean notPossibleComposite
- IClass currentClass
--
- preVisitModel(): void
- preVisitClass(): void
- visitField: void
- postVisitModel(): void
+ write(IModel model): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2184</x>
      <y>1458</y>
      <w>102</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>SingletonPattern
--
- String ClassName
- String UMLProperty
- String UMLLabel
--
+ String getProperty()
+ String getLabel()
+ String getClassName()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1308</x>
      <y>1668</y>
      <w>162</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>ExtensionRelation
--
- String start
- String end
- String details
- String ARROW
- List&lt;String&gt; labels
--
+ drawRelation(): String
+ equals(Object obj): boolean
+ setFromObject(String startObject): void
+ setToObject(String endObject): void
+ getFromObject(): String
+ getToObject(): String
+ accept(IVisitor): void
+ addProperty(String label): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1308</x>
      <y>1512</y>
      <w>162</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>HasRelation
--
- String start
- String end
- String details
- String ARROW
- List&lt;String&gt; labels
--
+ drawRelation(): String
+ equals(Object obj): boolean
+ setFromObject(String startObject): void
+ setToObject(String endObject): void
+ getFromObject(): String
+ getToObject(): String
+ accept(IVisitor): void
+ addProperty(String label): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1308</x>
      <y>1974</y>
      <w>162</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>InterfaceRelation
--
- String start
- String end
- String details
- String ARROW
- List&lt;String&gt; labels
--
+ drawRelation(): String
+ equals(Object obj): boolean
+ setFromObject(String startObject): void
+ setToObject(String endObject): void
+ getFromObject(): String
+ getToObject(): String
+ accept(IVisitor): void
+ addProperty(String label): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1308</x>
      <y>1818</y>
      <w>162</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>UseRelation
--
- String start
- String end
- String details
- String ARROW
- List&lt;String&gt; labels
--
+ drawRelation(): String
+ equals(Object obj): boolean
+ setFromObject(String startObject): void
+ setToObject(String endObject): void
+ getFromObject(): String
+ getToObject(): String
+ accept(IVisitor): void
+ addProperty(String label): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1500</x>
      <y>1248</y>
      <w>66</w>
      <h>372</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>90.0;10.0;90.0;600.0;10.0;600.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1464</x>
      <y>1602</y>
      <w>54</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1464</x>
      <y>1602</y>
      <w>102</w>
      <h>138</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;210.0;150.0;210.0;150.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1464</x>
      <y>1722</y>
      <w>102</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;260.0;150.0;260.0;150.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1464</x>
      <y>1872</y>
      <w>102</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;220.0;150.0;220.0;150.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1956</x>
      <y>1392</y>
      <w>18</w>
      <h>186</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;290.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2340</x>
      <y>1332</y>
      <w>18</w>
      <h>468</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;760.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1728</x>
      <y>1302</y>
      <w>18</w>
      <h>276</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;440.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1962</x>
      <y>852</y>
      <w>18</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1956</x>
      <y>1002</y>
      <w>18</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;260.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2034</x>
      <y>1236</y>
      <w>264</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>420.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1794</x>
      <y>1230</y>
      <w>96</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;140.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2472</x>
      <y>1224</y>
      <w>84</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1404</x>
      <y>570</y>
      <w>420</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;260.0;200.0;260.0;200.0;10.0;680.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1956</x>
      <y>588</y>
      <w>18</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;330.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1218</x>
      <y>786</y>
      <w>138</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>210.0;10.0;210.0;120.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1218</x>
      <y>786</y>
      <w>138</w>
      <h>162</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>210.0;10.0;210.0;250.0;10.0;250.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1218</x>
      <y>786</y>
      <w>138</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>210.0;10.0;210.0;380.0;10.0;380.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1566</x>
      <y>1002</y>
      <w>378</w>
      <h>174</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;270.0;10.0;130.0;610.0;130.0;610.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>780</x>
      <y>858</y>
      <w>66</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>330</x>
      <y>840</y>
      <w>84</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2124</x>
      <y>552</y>
      <w>528</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>860.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2586</x>
      <y>390</y>
      <w>126</w>
      <h>156</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>190.0;240.0;190.0;110.0;10.0;110.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2268</x>
      <y>390</y>
      <w>444</w>
      <h>156</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>720.0;240.0;720.0;110.0;10.0;110.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2850</x>
      <y>390</y>
      <w>294</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;110.0;470.0;110.0;470.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2670</x>
      <y>306</y>
      <w>114</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>AdapterVisitor
--
- IVisitor visitor
- IClass classList
- boolean hasSingleton
--
- setupPreVisitClass(): void
- visithasRelation(): void
- PostVisitModel(): void
+ write(IModel model): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2802</x>
      <y>246</y>
      <w>150</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>DecoratorVisitor
--
- IVisitor visitor
- List&lt;String&gt; decoratorList
- List&lt;String&gt; ConcreteDecorators
- Collections&lt;String&gt; tempInterfaces
- List&lt;String&gt; ComponentList
- String tempExtension
- IClass tempClass
- boolean notAbstract
- boolean isDecorator
--
- setupPreVisitClass(): void
- visitField(): void
- visitExtensionRelation(): void
- PostVisitModel(): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2694</x>
      <y>390</y>
      <w>42</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;110.0;50.0;110.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2718</x>
      <y>390</y>
      <w>150</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;110.0;230.0;110.0;230.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2034</x>
      <y>816</y>
      <w>306</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>490.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1596</x>
      <y>816</y>
      <w>678</w>
      <h>360</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>1110.0;10.0;1110.0;470.0;10.0;470.0;10.0;580.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1728</x>
      <y>1092</y>
      <w>18</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1920</x>
      <y>1092</y>
      <w>18</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2256</x>
      <y>1092</y>
      <w>102</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;150.0;10.0;150.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3096</x>
      <y>714</y>
      <w>18</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3084</x>
      <y>582</y>
      <w>18</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2940</x>
      <y>546</y>
      <w>108</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;160.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2916</x>
      <y>576</y>
      <w>72</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0;100.0;60.0;100.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3204</x>
      <y>564</y>
      <w>72</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>100.0;10.0;10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2106</x>
      <y>1452</y>
      <w>90</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0;70.0;90.0;130.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2184</x>
      <y>1542</y>
      <w>102</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>DecoratorPattern
--
- String ClassName
- String UMLProperty
- String UMLLabel
--
+ String getProperty()
+ String getLabel()
+ String getClassName()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2184</x>
      <y>1626</y>
      <w>102</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>AdapterPattern
--
- String ClassName
- String UMLProperty
- String UMLLabel
--
+ String getProperty()
+ String getLabel()
+ String getClassName()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2142</x>
      <y>1500</y>
      <w>54</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;120.0;70.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2142</x>
      <y>1566</y>
      <w>54</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;140.0;70.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2022</x>
      <y>1392</y>
      <w>18</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2754</x>
      <y>546</y>
      <w>126</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>190.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2430</x>
      <y>576</y>
      <w>258</w>
      <h>258</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;410.0;410.0;410.0;410.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2184</x>
      <y>1368</y>
      <w>102</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>CompositePattern
--
-className: String
-UMLProperty: String
-UMLlabel: String
--
+getProperty(): String
+getLabel(): String
+getClassName(): String
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2142</x>
      <y>1404</y>
      <w>54</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;90.0;10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2532</x>
      <y>306</y>
      <w>114</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>SingletonVisitor
--
- Visitor visitor
- IClass currentClass
- boolean hasSingleton
--
- setupPreVisitClass(): void
- visitField(): void
- visitMethod(): void
+ write(IModel model): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2442</x>
      <y>390</y>
      <w>18</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;110.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2016</x>
      <y>342</y>
      <w>120</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>BruteForceAdapterDetector
--
IModel model;
- List&lt;IClass&gt; classList
--
+ void adapterDetect()</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
