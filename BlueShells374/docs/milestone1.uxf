<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.3">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1208</x>
      <y>656</y>
      <w>264</w>
      <h>232</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
IMethod
--
--
+ getName() String
+ setName(String name) void
+ getAccessLevel() String
+ setAccessLevel(String access) void
+ getDesc() String
+ setDesc(String desc) void
+ getExceptions() String[]
+ setExceptions(String[] exceptions) void
+ getReturnType() String
+ setReturnType(String type) void
+ addArgument(String arg) void
+ getArguments() List&lt;String&gt;
+ toString() String
+ getInnerCalls(): List&lt;MethodContainer&gt;
+ addInnerCall(MethodContainer innerCall): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1504</x>
      <y>656</y>
      <w>200</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
IField
--
--
+ getName() String
+ setName(String name) void
+ getDesc() String
+ setDesc(String desc) void
+ getSignature() String
+ setSignature(String sign) void
+ getValue() Object
+ setValue(Object value) void
+ getAccessLevel() String
+ setAccessLevel(String access) void
+ toString() String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1104</x>
      <y>296</y>
      <w>280</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
IModel
--
+ generateGraph() void throws IOException
+ addClass(IClass currentClass): void
+ getClasses(): List&lt;IClass&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>904</x>
      <y>144</y>
      <w>424</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>DesignParser
--
--
+ main(String[] args) void
+ parser(String args[]) void
- commandConsole(IModel model, HashMap&lt;String, IGenerator&gt; generators): void
- SDLogic(String line, Scanner scanner, SequenceGenerator generator): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1576</x>
      <y>472</y>
      <w>520</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>ClassDeclarationVisitor
--
- IClass: currentClass
- String[]: currectClass
--
+ visit(int version, int access, String name, String signature, String superName, String[] interfaces): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1584</x>
      <y>368</y>
      <w>464</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>ClassFieldVisitor
--
- IClass: currentClass
--
+ visitField(int access, String name, String desc, String signature, Object value): FieldVisitor 
addAccessLevel(int access, IField currentField): void </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>936</x>
      <y>976</y>
      <w>24</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>784</x>
      <y>976</y>
      <w>24</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>592</x>
      <y>976</y>
      <w>24</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1240</x>
      <y>880</y>
      <w>24</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1584</x>
      <y>848</y>
      <w>24</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>856</x>
      <y>328</y>
      <w>264</w>
      <h>344</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>310.0;10.0;10.0;10.0;10.0;410.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>896</x>
      <y>600</y>
      <w>456</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0;550.0;10.0;550.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>896</x>
      <y>600</y>
      <w>752</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0;920.0;10.0;920.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1600</x>
      <y>0</y>
      <w>520</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>ClassVisitor
--
# api: int
# cv: ClassVisitor
--
+ visit(int version, int access, String name, String signature, String superName, String[] interfaces): void
+ visitSource(String source, String debug): void
+ visitOuterClass(String owner, String name, String desc): void
+ visitAnnotation(String desc, boolean visible): AnnotationVisitor
+ visitTypeAnnotation(int typeRef, TypePath typePath, String desc, boolean visible): AnnotationVisitor
+ visitAttribute(Attribute attr): void
+ visitInnerClass(String name, String outerName, String innerName, int access): void
+ visitField(int access, String name, String desc, String signature, Object value): FieldVisitor
+ visitMethod(int access, String name, String desc, String signature, String[] exceptions): MethodVisitor
+ visitEnd(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1536</x>
      <y>136</y>
      <w>80</w>
      <h>384</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;10.0;10.0;460.0;50.0;460.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1320</x>
      <y>64</y>
      <w>296</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>350.0;10.0;90.0;10.0;90.0;140.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1240</x>
      <y>216</y>
      <w>24</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;100.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1096</x>
      <y>416</y>
      <w>272</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>Model
--
- List&lt;IClass&gt;: classes
--
+ addClass(IClass currentClass): void
+ getClasses(): List&lt;IClass&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1256</x>
      <y>376</y>
      <w>24</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1216</x>
      <y>928</y>
      <w>256</w>
      <h>304</h>
    </coordinates>
    <panel_attributes>Method
--
- String name
- String accessLevel
- String desc
- String[] exceptions
- String returnType
- List&lt;String&gt; arguments
--
+ getName() String
+ setName(String name) void
+ getAccessLevel() String
+ setAccessLevel(String access) void
+ getDesc() String
+ setDesc(String desc) void
+ getExceptions() String[]
+ setExceptions(String[] exceptions) void
+ getReturnType() String
+ setReturnType(String type) void
+ addArgument(String arg) void
+ getArguments() List&lt;String&gt;
+ toString() String
+ getInnerCalls(): List&lt;MethodContainer&gt;
+ addInnerCall(MethodContainer innerCall): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1488</x>
      <y>896</y>
      <w>224</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>Field
--
- String name
- String desc
- String signature
- Object value
- String accessLevel
--
+ getName() String
+ setName(String name) void
+ getDesc() String
+ setDesc(String desc) void
+ getSignature() String
+ setSignature(String sign) void
+ getValue() Object
+ setValue(Object value) void
+ getAccessLevel() String
+ setAccessLevel(String access) void
+ toString() String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1848</x>
      <y>728</y>
      <w>216</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
IArrow
--
--
+ drawArrow() String
+ setFromObject(String startObject) void
+ setToObject(String endObject) void
+ getFromObject() String
+ getToObject() String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1752</x>
      <y>1008</y>
      <w>216</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>ArrowExtension
--
- start: String
- end: String
- details: String
- ARROW = " -&gt; ": String
--
+ drawArrow(): String
+ setFromObject(String startObject): void
+ setToObject(String endObject): void
+ getFromObject(): String
+ getToObject(): String
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2024</x>
      <y>848</y>
      <w>216</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>ArrowHas
--
- start: String
- end: String
- details: String
- ARROW = " -&gt; ": String
--
+ drawArrow(): String
+ setFromObject(String startObject): void
+ setToObject(String endObject): void
+ getFromObject(): String
+ getToObject(): String
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2024</x>
      <y>1008</y>
      <w>216</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>ArrowInterface
--
- start: String
- end: String
- details: String
- ARROW = " -&gt; ": String
--
+ drawArrow(): String
+ setFromObject(String startObject): void
+ setToObject(String endObject): void
+ getFromObject(): String
+ getToObject(): String
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1752</x>
      <y>848</y>
      <w>216</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>ArrowUses
--
- start: String
- end: String
- details: String
- ARROW = " -&gt; ": String
--
+ drawArrow(): String
+ setFromObject(String startObject): void
+ setToObject(String endObject): void
+ getFromObject(): String
+ getToObject(): String

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1984</x>
      <y>832</y>
      <w>24</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;330.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1960</x>
      <y>1088</y>
      <w>80</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1960</x>
      <y>920</y>
      <w>80</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>600</x>
      <y>656</y>
      <w>368</w>
      <h>328</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
IClass
--
--
+getIMethods(): Collection&lt;IMethod&gt;
+getIField(): Collection&lt;IField&gt;
+getAcessLevel(): int
+getSignature(): String
+getClassName(): String
+getClassVersion(): double
+getSuperName(): IClass
+getInterface(): Collection&lt;String&gt;
+getExtension(): String
+addIMethod(IMethod method): void
+addIField(IField field): void
+setAccessLevel(int access): void
+setSignature(String signature): void
+setClassName(String name): void
+setClassVersion(double version): void
+setSuperName(IClass name): void
+addInterface(String inter): void
+setExtension(String extension): void
+toString(): String
+addArrow(IArrow arrow): void
+getArrows(): Collection&lt;IArrow&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>960</x>
      <y>728</y>
      <w>904</w>
      <h>544</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>1110.0;50.0;970.0;50.0;970.0;660.0;290.0;660.0;290.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>440</x>
      <y>1048</y>
      <w>216</w>
      <h>432</h>
    </coordinates>
    <panel_attributes>ConcreteClass
--
- Collection&lt;IMethod&gt; methodList
- Collection&lt;IField&gt; fieldList
- int accessLevel
- String signature
- String name
- double version
- IClass superClass
- Collection&lt;String&gt; interfaceList
- String extension
- Collection&lt;IArrow&gt; arrows
--
+getIMethods(): Collection&lt;IMethod&gt;
+getIField(): Collection&lt;IField&gt;
+getAcessLevel(): int
+getSignature(): String
+getClassName(): String
+getClassVersion(): double
+getSuperName(): IClass
+getInterface(): Collection&lt;String&gt;
+getExtension(): String
+addIMethod(IMethod method): void
+addIField(IField field): void
+setAccessLevel(int access): void
+setSignature(String signature): void
+setClassName(String name): void
+setClassVersion(double version): void
+setSuperName(IClass name): void
+addInterface(String inter): void
+setExtension(String extension): void
+toString(): String
+addArrow(IArrow arrow): void
+getArrows(): Collection&lt;IArrow&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>672</x>
      <y>1048</y>
      <w>216</w>
      <h>432</h>
    </coordinates>
    <panel_attributes>InterfaceClass
--
- Collection&lt;IMethod&gt; methodList
- Collection&lt;IField&gt; fieldList
- int accessLevel
- String signature
- String name
- double version
- IClass superClass
- Collection&lt;String&gt; interfaceList
- String extension
- Collection&lt;IArrow&gt; arrows
--
+getIMethods(): Collection&lt;IMethod&gt;
+getIField(): Collection&lt;IField&gt;
+getAcessLevel(): int
+getSignature(): String
+getClassName(): String
+getClassVersion(): double
+getSuperName(): IClass
+getInterface(): Collection&lt;String&gt;
+getExtension(): String
+addIMethod(IMethod method): void
+addIField(IField field): void
+setAccessLevel(int access): void
+setSignature(String signature): void
+setClassName(String name): void
+setClassVersion(double version): void
+setSuperName(IClass name): void
+addInterface(String inter): void
+setExtension(String extension): void
+toString(): String
+addArrow(IArrow arrow): void
+getArrows(): Collection&lt;IArrow&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>904</x>
      <y>1048</y>
      <w>216</w>
      <h>432</h>
    </coordinates>
    <panel_attributes>AbstractClass
--
- Collection&lt;IMethod&gt; methodList
- Collection&lt;IField&gt; fieldList
- int accessLevel
- String signature
- String name
- double version
- IClass superClass
- Collection&lt;String&gt; interfaceList
- String extension
- Collection&lt;IArrow&gt; arrows
--
+getIMethods(): Collection&lt;IMethod&gt;
+getIField(): Collection&lt;IField&gt;
+getAcessLevel(): int
+getSignature(): String
+getClassName(): String
+getClassVersion(): double
+getSuperName(): IClass
+getInterface(): Collection&lt;String&gt;
+getExtension(): String
+addIMethod(IMethod method): void
+addIField(IField field): void
+setAccessLevel(int access): void
+setSignature(String signature): void
+setClassName(String name): void
+setClassVersion(double version): void
+setSuperName(IClass name): void
+addInterface(String inter): void
+setExtension(String extension): void
+toString(): String
+addArrow(IArrow arrow): void
+getArrows(): Collection&lt;IArrow&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2168</x>
      <y>520</y>
      <w>448</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>myMethodVisitor
--
- currentClass: IClass
- classes: String[]
--
+ visitFieldInsn(int opcode, String owner, String name, String desc): void
+ visitMethodInsn(int opcode, String owner, String name, String desc, boolean itf): void
+ visitFieldInsn(int opcode, String owner, String name, String desc): void
+ visitTypeInsn(int opcode, String type): void
+ visitVarInsn(int opcode, int var): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2160</x>
      <y>0</y>
      <w>512</w>
      <h>456</h>
    </coordinates>
    <panel_attributes>/MethodVisitor/
--
# api: final int
# mv: MethodVisitor
--
+ visitAnnotation(String, boolean): AnnotationVisitor
+ visitAnnotationDefault(): AnnotationVisitor
+ visitAttribute(Attribute): void
+ visitCode(): void
+ visitEnd(): void
+ visitFieldInsn(int, String, String, String): void
+ visitFrame(int, int, Object[], int, Object[]): void
+ visitIincInsn(int, int): void
+ visitInsn(int): void
+ visitInsnAnnotation(int, TypePath, String, boolean): AnnotationVisitor
+ visitIntInsn(int, int): void
+ visitInvokeDynamicInsn(String, String, Handle, Object...): void
+ visitJumpInsn(int, Label): void
+ visitLabel(Label): void
+ visitLdcInsn(Object): void
+ visitLineNumber(int, Label): void
+ visitLocalVariable(String, String, String, Label, Label, int): void
+ visitLocalVariableAnnotation(int, TypePath, Label[], Label[], int[], String, boolean): AnnotationVisitor
+ visitLookupSwitchInsn(Label, int[], Label[]): void
+ visitMaxs(int, int): void
+ visitMethodInsn(int, String, String, String): void
+ visitMethodInsn(int, String, String, String, boolean): void
+ visitMultiANewArrayInsn(String, int): void
+ visitParameter(String, int): void
+ visitParameterAnnotation(int, String, boolean): AnnotationVisitor
+ visitTableSwitchInsn(int, int, Label, Label...): void
+ visitTryCatchAnnotation(int, TypePath, String, boolean)
+ visitTryCatchBlock(Label, Label, Label, String): void
+ visitTypeAnnotation(int, TypePath, String, boolean): AnnotationVisitor
+ visitTypeInsn(int, String): void
+ visitVarInsn(int, int): void 
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2416</x>
      <y>448</y>
      <w>24</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2088</x>
      <y>232</y>
      <w>88</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2000</x>
      <y>176</y>
      <w>128</w>
      <h>568</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;690.0;10.0;550.0;140.0;550.0;140.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2056</x>
      <y>568</y>
      <w>128</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;220.0;110.0;220.0;110.0;10.0;140.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1536</x>
      <y>384</y>
      <w>64</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-
</panel_attributes>
    <additional_attributes>10.0;20.0;60.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1536</x>
      <y>248</y>
      <w>56</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-
</panel_attributes>
    <additional_attributes>10.0;20.0;50.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1576</x>
      <y>200</y>
      <w>520</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>ClassMethodVisitor
--
-currentClass: IClass
-classes: String[]
--
+visitMethod(int access, String name, String desc, String signature, String[] exceptions): MethodVisitor
~addAccessLevel(int access, IMethod currentMethod): void
~addReturnType(String desc, String signature, IMethod currentMethod): void
~addArguments(String desc, String signature, IMethod currentMethod): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>936</x>
      <y>552</y>
      <w>1248</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;130.0;10.0;50.0;1280.0;50.0;1280.0;10.0;1540.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>304</x>
      <y>152</y>
      <w>192</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
IGenerator
--
--
+ execute(): void
+ getName(): String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>488</x>
      <y>184</y>
      <w>432</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;520.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>288</x>
      <y>296</y>
      <w>280</w>
      <h>352</h>
    </coordinates>
    <panel_attributes>SequenceGenerator
--
- String ERROR_EXCEPTION
- String ERROR_ITEM_NOT_FOUND
- String ERROR_NO_EXISTING_ARGS
- String GENERATOR_NAME
- String SYSTEM_OUTPUT_FILE
- IModel model
- String name
- String className
- String methodName
- List&lt;String&gt; parameters
- int callDepth
- IMethod startMethod
- IClass startClass
- List&lt;String&gt; classList
- List&lt;String&gt; methodList
--
+ execute(): void
+ setClassName(String name): void
+ setMethodName(String name): void
+ setParameters(list&lt;String&gt; params): void
+ setMaxCallDepth(int depth): void
- generateGraph() void throws IOException
- getArgs(MethodContainer innerCall): String
- getModelClass(): IClass
- getMethod(IClass c, List&lt;String&gt; params): IMethod
+ getName(): String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>416</x>
      <y>224</y>
      <w>24</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>296</y>
      <w>280</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>UMLGenerator
--
- IModel model
- String name
--
+ execute(): String
+ getName(): String
- generateGraph() void throws IOException
- generateBoxObjects(IClass obj): String
- generateArrows(IClass obj): String
- parsePointerClass(String classPath): String
- parseArrowTypre(String arrowPath): String
- addMethods(Collection&lt;IMethod&gt; collection): String
- printMethod(IMethod method): String
- addFields(Collection&lt;IField&gt; collection): String
- printFields(IField field): String
- trimValue(String initial, String delimiter): String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>144</x>
      <y>176</y>
      <w>176</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>200.0;10.0;10.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>560</x>
      <y>304</y>
      <w>560</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>680.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>248</x>
      <y>312</y>
      <w>872</w>
      <h>368</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>1070.0;10.0;450.0;10.0;450.0;410.0;430.0;410.0;430.0;440.0;10.0;440.0;10.0;250.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>600</x>
      <y>464</y>
      <w>624</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>760.0;260.0;570.0;260.0;570.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>560</x>
      <y>488</y>
      <w>680</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>830.0;210.0;830.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>240</x>
      <y>248</y>
      <w>1328</w>
      <h>424</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>1640.0;510.0;1640.0;390.0;690.0;390.0;690.0;10.0;10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>288</x>
      <y>696</y>
      <w>264</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>MethodContainer
--
-instantiation: boolean
-goingToClass: String
-goingFromClass: String
-goingToMethod: String
-desc: String
--
+isInstantiation(): boolean
+setInstantiation(boolean instantiation): void
+getGoingToClass(): String
+setGoingToClass(String goingToClass): void
+getGoingFromClass(): String
+setGoingFromClass(String goingFromClass): void
+getGoingToMethod(): String
+setGoingToMethod(String methodName): void
+setDesc(String desc): void
+getDesc(): String

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>360</x>
      <y>640</y>
      <w>24</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>352</x>
      <y>640</y>
      <w>2000</w>
      <h>1056</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;350.0;10.0;1300.0;2480.0;1300.0;2480.0;10.0</additional_attributes>
  </element>
</diagram>
