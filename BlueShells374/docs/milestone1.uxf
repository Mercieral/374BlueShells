<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.3">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2352</x>
      <y>744</y>
      <w>264</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
IMethod
--
--
+ getName() String
+ setName(String name) void
+ getAccessLevel() String
+ setAccessLevel(String access) void
+ getDesc() String
+ setDesc(String desc) void
+ getExceptions() String[]
+ setExceptions(String[] exceptions) void
+ getReturnType() String
+ setReturnType(String type) void
+ addArgument(String arg) void
+ getArguments() List&lt;String&gt;
+ toString() String
+ getInnerCalls(): List&lt;MethodContainer&gt;
+ addInnerCall(MethodContainer innerCall): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2648</x>
      <y>744</y>
      <w>200</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
IField
--
--
+ getName() String
+ setName(String name) void
+ getDesc() String
+ setDesc(String desc) void
+ getSignature() String
+ setSignature(String sign) void
+ getValue() Object
+ setValue(Object value) void
+ getAccessLevel() String
+ setAccessLevel(String access) void
+ toString() String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2248</x>
      <y>384</y>
      <w>280</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
IModel
--
+ generateGraph() void throws IOException
+ addClass(IClass currentClass): void
+ getClasses(): List&lt;IClass&gt;
+ getRelations(): List&lt;IRelation&gt;
+ addRelation(IRelation relation): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2048</x>
      <y>232</y>
      <w>424</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>DesignParser
--
--
+ main(String[] args) void
+ parser(String args[]) void
- commandConsole(IModel model, HashMap&lt;String, IGenerator&gt; generators): void
- SDLogic(String line, Scanner scanner, SequenceGenerator generator): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2720</x>
      <y>560</y>
      <w>520</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>ClassDeclarationVisitor
--
- IClass: currentClass
- String[]: currectClass
--
+ visit(int version, int access, String name, String signature, String superName, String[] interfaces): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2728</x>
      <y>456</y>
      <w>464</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>ClassFieldVisitor
--
- IClass: currentClass
--
+ visitField(int access, String name, String desc, String signature, Object value): FieldVisitor 
addAccessLevel(int access, IField currentField): void </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1736</x>
      <y>1064</y>
      <w>24</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2384</x>
      <y>976</y>
      <w>24</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2728</x>
      <y>936</y>
      <w>24</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2000</x>
      <y>416</y>
      <w>264</w>
      <h>344</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>310.0;10.0;10.0;10.0;10.0;410.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2040</x>
      <y>688</y>
      <w>456</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0;550.0;10.0;550.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2040</x>
      <y>688</y>
      <w>752</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0;920.0;10.0;920.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2744</x>
      <y>88</y>
      <w>520</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>ClassVisitor
--
# api: int
# cv: ClassVisitor
--
+ visit(int version, int access, String name, String signature, String superName, String[] interfaces): void
+ visitSource(String source, String debug): void
+ visitOuterClass(String owner, String name, String desc): void
+ visitAnnotation(String desc, boolean visible): AnnotationVisitor
+ visitTypeAnnotation(int typeRef, TypePath typePath, String desc, boolean visible): AnnotationVisitor
+ visitAttribute(Attribute attr): void
+ visitInnerClass(String name, String outerName, String innerName, int access): void
+ visitField(int access, String name, String desc, String signature, Object value): FieldVisitor
+ visitMethod(int access, String name, String desc, String signature, String[] exceptions): MethodVisitor
+ visitEnd(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2680</x>
      <y>224</y>
      <w>80</w>
      <h>384</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;10.0;10.0;460.0;50.0;460.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2464</x>
      <y>152</y>
      <w>296</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>350.0;10.0;90.0;10.0;90.0;140.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2384</x>
      <y>304</y>
      <w>24</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;100.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2240</x>
      <y>520</y>
      <w>272</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>Model
--
- List&lt;IClass&gt; classes
- List&lt;IRelation&gt; relations 
--
+ addClass(IClass currentClass): void
+ getClasses(): List&lt;IClass&gt;
+ accept(IVisitor v): void
+ addRelation(IRelation relation): void
+ getRelations(): List&lt;IRelation&gt; 
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2400</x>
      <y>488</y>
      <w>24</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2360</x>
      <y>1040</y>
      <w>256</w>
      <h>320</h>
    </coordinates>
    <panel_attributes>Method
--
- String name
- String accessLevel
- String desc
- String[] exceptions
- String returnType
- List&lt;String&gt; arguments
- List&lt;MethodContainer&gt; innerCalls
--
+ getName() String
+ setName(String name) void
+ getAccessLevel() String
+ setAccessLevel(String access) void
+ getDesc() String
+ setDesc(String desc) void
+ getExceptions() String[]
+ setExceptions(String[] exceptions) void
+ getReturnType() String
+ setReturnType(String type) void
+ addArgument(String arg) void
+ getArguments() List&lt;String&gt;
+ getInnerCalls(): List&lt;MethodContainer&gt;
+ addInnerCall(MethodContainer innerCall): void
+ accept(IVisitor v): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2632</x>
      <y>984</y>
      <w>224</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>Field
--
- String name
- String desc
- String signature
- Object value
- String accessLevel
--
+ getName() String
+ setName(String name) void
+ getDesc() String
+ setDesc(String desc) void
+ getSignature() String
+ setSignature(String sign) void
+ getValue() Object
+ setValue(Object value) void
+ getAccessLevel() String
+ setAccessLevel(String access) void
+ accept(IVisitor v): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1744</x>
      <y>744</y>
      <w>368</w>
      <h>328</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
IClass
--
--
+getIMethods(): Collection&lt;IMethod&gt;
+getIField(): Collection&lt;IField&gt;
+getAcessLevel(): int
+getSignature(): String
+getClassName(): String
+getClassVersion(): double
+getSuperName(): IClass
+getInterface(): Collection&lt;String&gt;
+getExtension(): String
+addIMethod(IMethod method): void
+addIField(IField field): void
+setAccessLevel(int access): void
+setSignature(String signature): void
+setClassName(String name): void
+setClassVersion(double version): void
+setSuperName(IClass name): void
+addInterface(String inter): void
+setExtension(String extension): void
+toString(): String
+addArrow(IArrow arrow): void
+getArrows(): Collection&lt;IArrow&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1584</x>
      <y>1136</y>
      <w>216</w>
      <h>432</h>
    </coordinates>
    <panel_attributes>ConcreteClass
--
- Collection&lt;IMethod&gt; methodList
- Collection&lt;IField&gt; fieldList
- int accessLevel
- String signature
- String name
- double version
- IClass superClass
- Collection&lt;String&gt; interfaceList
- String extension
- Collection&lt;IArrow&gt; arrows
--
+ getIMethods(): Collection&lt;IMethod&gt;
+ getIField(): Collection&lt;IField&gt;
+ getAcessLevel(): int
+ getSignature(): String
+ getClassName(): String
+ getClassVersion(): double
+ getSuperName(): IClass
+ getInterface(): Collection&lt;String&gt;
+ getExtension(): String
+ addIMethod(IMethod method): void
+ addIField(IField field): void
+ setAccessLevel(int access): void
+ setSignature(String signature): void
+ setClassName(String name): void
+ setClassVersion(double version): void
+ setSuperName(IClass name): void
+ addInterface(String inter): void
+ setExtension(String extension): void
+ addArrow(IArrow arrow): void
+ getArrows(): Collection&lt;IArrow&gt;
+ accept(IVisitor v): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3312</x>
      <y>608</y>
      <w>448</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>myMethodVisitor
--
- currentClass: IClass
- classes: String[]
--
+ visitFieldInsn(int opcode, String owner, String name, String desc): void
+ visitMethodInsn(int opcode, String owner, String name, String desc, boolean itf): void
+ visitFieldInsn(int opcode, String owner, String name, String desc): void
+ visitTypeInsn(int opcode, String type): void
+ visitVarInsn(int opcode, int var): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3304</x>
      <y>88</y>
      <w>512</w>
      <h>456</h>
    </coordinates>
    <panel_attributes>/MethodVisitor/
--
# api: final int
# mv: MethodVisitor
--
+ visitAnnotation(String, boolean): AnnotationVisitor
+ visitAnnotationDefault(): AnnotationVisitor
+ visitAttribute(Attribute): void
+ visitCode(): void
+ visitEnd(): void
+ visitFieldInsn(int, String, String, String): void
+ visitFrame(int, int, Object[], int, Object[]): void
+ visitIincInsn(int, int): void
+ visitInsn(int): void
+ visitInsnAnnotation(int, TypePath, String, boolean): AnnotationVisitor
+ visitIntInsn(int, int): void
+ visitInvokeDynamicInsn(String, String, Handle, Object...): void
+ visitJumpInsn(int, Label): void
+ visitLabel(Label): void
+ visitLdcInsn(Object): void
+ visitLineNumber(int, Label): void
+ visitLocalVariable(String, String, String, Label, Label, int): void
+ visitLocalVariableAnnotation(int, TypePath, Label[], Label[], int[], String, boolean): AnnotationVisitor
+ visitLookupSwitchInsn(Label, int[], Label[]): void
+ visitMaxs(int, int): void
+ visitMethodInsn(int, String, String, String): void
+ visitMethodInsn(int, String, String, String, boolean): void
+ visitMultiANewArrayInsn(String, int): void
+ visitParameter(String, int): void
+ visitParameterAnnotation(int, String, boolean): AnnotationVisitor
+ visitTableSwitchInsn(int, int, Label, Label...): void
+ visitTryCatchAnnotation(int, TypePath, String, boolean)
+ visitTryCatchBlock(Label, Label, Label, String): void
+ visitTypeAnnotation(int, TypePath, String, boolean): AnnotationVisitor
+ visitTypeInsn(int, String): void
+ visitVarInsn(int, int): void 
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3560</x>
      <y>536</y>
      <w>24</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3232</x>
      <y>320</y>
      <w>88</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2680</x>
      <y>472</y>
      <w>64</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-
</panel_attributes>
    <additional_attributes>10.0;20.0;60.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2680</x>
      <y>336</y>
      <w>56</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-
</panel_attributes>
    <additional_attributes>10.0;20.0;50.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2720</x>
      <y>288</y>
      <w>520</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>ClassMethodVisitor
--
-currentClass: IClass
-classes: String[]
--
+visitMethod(int access, String name, String desc, String signature, String[] exceptions): MethodVisitor
~addAccessLevel(int access, IMethod currentMethod): void
~addReturnType(String desc, String signature, IMethod currentMethod): void
~addArguments(String desc, String signature, IMethod currentMethod): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2080</x>
      <y>640</y>
      <w>1248</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;130.0;10.0;50.0;1280.0;50.0;1280.0;10.0;1540.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3312</x>
      <y>816</y>
      <w>264</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>MethodContainer
--
-instantiation: boolean
-goingToClass: String
-goingFromClass: String
-goingToMethod: String
-desc: String
--
+isInstantiation(): boolean
+setInstantiation(boolean instantiation): void
+getGoingToClass(): String
+setGoingToClass(String goingToClass): void
+getGoingFromClass(): String
+setGoingFromClass(String goingFromClass): void
+getGoingToMethod(): String
+setGoingToMethod(String methodName): void
+setDesc(String desc): void
+getDesc(): String

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3472</x>
      <y>728</y>
      <w>24</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;110.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>0</y>
      <w>352</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>IVisitor
&lt;&lt;interface&gt;&gt;
--
--
+ preVisit(ITraverser c): void
+ visit(ITraverser c): void
+ postVisit(ITraverser c): void
+ addVisit(VisitType visitType, Class&lt;?&gt; clazz, IVisitMethod m): void
+ removeVisit(VisitType visitType, Class&lt;?&gt; clazz): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>360</x>
      <y>0</y>
      <w>160</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>LookupKey
--
-visitType: VisitType
-targetType: Class&lt;?&gt;
--
+ hashCode(): int
+ equals(Object obj): boolean
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>136</y>
      <w>144</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>IStream
&lt;&lt;interface&gt;&gt;
--
--
+write(IModel model): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>152</x>
      <y>136</y>
      <w>144</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>ITraverser
&lt;&lt;interface&gt;&gt;
--
--
+accept(IVisitor v): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>304</x>
      <y>136</y>
      <w>152</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>IVisitMethod
&lt;&lt;interface&gt;&gt;
--
--
+execute(ITraverser t): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>504</x>
      <y>480</y>
      <w>584</w>
      <h>344</h>
    </coordinates>
    <panel_attributes>SequenceOutputStream
--
+ String GENERATOR_NAME
- String ERROR_ITEM_NOT_FOUND
- String ERROR_EXCEPTION
- String SYSTEM_OUTPUT_FILE
- Visitor visitor
- int callDepth
- String methodName
- String className
- String parameters
- int counter
- Map&lt;String, String&gt; variables
- List&lt;String&gt; instances
- List&lt;String&gt; classList
- List&lt;String&gt; methodList
- boolean first
--
+ initializeString(String class, String method, String desc, int callDepth): void
+ write(IModel model): void
+ setUpVisitModel(): void
- getModelClass(String name, IModel m): IClass
- recursiveGenerateGraph(String class, String varName, String method, String desc, int depth, IModel model): void
- recursiveMethodGenerator(IMethod m, String varName, int depth, IModel model): void
- getMethod(IClass c, List&lt;String&gt; params, String method): IMethod
- getReturnType(MethodContainer innerCall): String
- getArgs(MethodContainer innerCall): String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>56</x>
      <y>456</y>
      <w>248</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>UMLOutputStream
--
- IVisitor visitor
--
- setupPreVisitModel(): void
- postVisitModel(): void
- setupPreVisitModel(): void
- visitClass(): void
- postVistClass(): void
- visitField(): void
- visitMethod(): void
- trimValue(String initial, String delimiter): String
+ write(IModel model): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>568</x>
      <y>8</y>
      <w>352</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>Visitor
--
- Map&lt;LookupKey, IVisitMethod&gt; keyToMethodMap
--
+ preVisit(ITraverser c): void
+ visit(ITraverser c): void
+ postVisit(ITraverser c): void
+ addVisit(VisitType visitType, Class&lt;?&gt; clazz, IVisitMethod m): void
+ removeVisit(VisitType visitType, Class&lt;?&gt; clazz): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>568</x>
      <y>136</y>
      <w>104</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
VisitType
--
PreVisit
Visit
PostVisit</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3048</x>
      <y>736</y>
      <w>80</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>IRelation
--
--
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
