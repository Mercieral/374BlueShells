digraph G {  rankdir=BT; 
 splines="ortho"; 
 	chocolateChocolateBoiler [ 
		shape = "record",
		color=blue,
		label = 
			"{ chocolate/ChocolateBoiler
			\n
			\<\<Singleton\>\>\n
			|
			- boolean empty \l
			- boolean boiled \l
			- ChocolateBoiler uniqueInstance \l
			| 
 			+ getInstance() : ChocolateBoiler \l
			+ fill() : void \l
			+ drain() : void \l
			+ boil() : void \l
			+ isEmpty() : boolean \l
			+ isBoiled() : boolean \l
			}" 
	]; 
	chocolateChocolateController [ 
		shape = "record",
		label = 
			"{ chocolate/ChocolateController
			\n
			|
			| 
 			+ main(java.lang.String[]) : void \l
			}" 
	]; 
	classicSingleton [ 
		shape = "record",
		color=blue,
		label = 
			"{ classic/Singleton
			\n
			\<\<Singleton\>\>\n
			|
			- Singleton uniqueInstance \l
			| 
 			+ getInstance() : Singleton \l
			}" 
	]; 
	dclSingleton [ 
		shape = "record",
		color=blue,
		label = 
			"{ dcl/Singleton
			\n
			\<\<Singleton\>\>\n
			|
			- Singleton uniqueInstance \l
			| 
 			+ getInstance() : Singleton \l
			}" 
	]; 
	dclSingletonClient [ 
		shape = "record",
		label = 
			"{ dcl/SingletonClient
			\n
			|
			| 
 			+ main(java.lang.String[]) : void \l
			}" 
	]; 
	statSingleton [ 
		shape = "record",
		color=blue,
		label = 
			"{ stat/Singleton
			\n
			\<\<Singleton\>\>\n
			|
			- Singleton uniqueInstance \l
			| 
 			 <clinit>() : void \l
			+ getInstance() : Singleton \l
			}" 
	]; 
	statSingletonClient [ 
		shape = "record",
		label = 
			"{ stat/SingletonClient
			\n
			|
			| 
 			+ main(java.lang.String[]) : void \l
			}" 
	]; 
	subCoolerSingleton [ 
		shape = "record",
		label = 
			"{ sub/CoolerSingleton
			\n
			|
			# Singleton uniqueInstance \l
			| 
 			}" 
	]; 
	subHotterSingleton [ 
		shape = "record",
		label = 
			"{ sub/HotterSingleton
			\n
			|
			| 
 			}" 
	]; 
	subSingleton [ 
		shape = "record",
		color=blue,
		label = 
			"{ sub/Singleton
			\n
			\<\<Singleton\>\>\n
			|
			# Singleton uniqueInstance \l
			| 
 			+ getInstance() : Singleton \l
			}" 
	]; 
	subSingletonTestDrive [ 
		shape = "record",
		label = 
			"{ sub/SingletonTestDrive
			\n
			|
			| 
 			+ main(java.lang.String[]) : void \l
			}" 
	]; 
	threadsafeSingleton [ 
		shape = "record",
		color=blue,
		label = 
			"{ threadsafe/Singleton
			\n
			\<\<Singleton\>\>\n
			|
			- Singleton uniqueInstance \l
			| 
 			+ getInstance() : Singleton \l
			}" 
	]; 
	chocolateChocolateBoiler -> chocolateChocolateBoiler
		[arrowhead="vee"];
	chocolateChocolateController -> chocolateChocolateBoiler
		[arrowhead="vee", style="dashed"];
	classicSingleton -> classicSingleton
		[arrowhead="vee"];
	dclSingleton -> dclSingleton
		[arrowhead="vee"];
	dclSingletonClient -> dclSingleton
		[arrowhead="vee", style="dashed"];
	statSingleton -> statSingleton
		[arrowhead="vee"];
	statSingletonClient -> statSingleton
		[arrowhead="vee", style="dashed"];
	subCoolerSingleton -> subSingleton
		[arrowhead="onormal"];
	subCoolerSingleton -> subSingleton
		[arrowhead="vee"];
	subCoolerSingleton -> subSingleton
		[arrowhead="vee", style="dashed"];
	subHotterSingleton -> subSingleton
		[arrowhead="onormal"];
	subSingletonTestDrive -> subCoolerSingleton
		[arrowhead="vee", style="dashed"];
	subSingletonTestDrive -> subHotterSingleton
		[arrowhead="vee", style="dashed"];
	threadsafeSingleton -> threadsafeSingleton
		[arrowhead="vee"];

}