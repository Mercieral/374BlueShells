digraph G {  rankdir=BT; 
 	problemasmAbstractClass [ 
		shape = "record",
		label = 
			"{ problem/asm/AbstractClass
			|
			- Collection methodList \l
			- Collection fieldList \l
			- int accessLevel \l
			- String signature \l
			- String name \l
			- double version \l
			- IClass superClass \l
			- Collection interfaceList \l
			- String extension \l
			| 
 			+ getIMethods() : Collection \l
			+ getIField() : Collection \l
			+ getAcessLevel() : int \l
			+ getSignature() : String \l
			+ getClassName() : String \l
			+ getClassVersion() : double \l
			+ getSuperName() : IClass \l
			+ getInterface() : Collection \l
			+ getExtension() : String \l
			+ addIMethod(IMethod arg0) : void \l
			+ addIField(IField arg0) : void \l
			+ setAccessLevel(int arg0) : void \l
			+ setSignature(String arg0) : void \l
			+ setClassName(String arg0) : void \l
			+ setClassVersion(double arg0) : void \l
			+ setSuperName(IClass arg0) : void \l
			+ addInterface(String arg0) : void \l
			+ setExtension(String arg0) : void \l
			}" 
	]; 
	problemasmClassDeclarationVisitor [ 
		shape = "record",
		label = 
			"{ problem/asm/ClassDeclarationVisitor
			|
			- IClass currentClass \l
			| 
 			+ visit(int arg0, int arg1, String arg2, String arg3, String arg4, String[] arg5) : void \l
			}" 
	]; 
	problemasmClassFieldVisitor [ 
		shape = "record",
		label = 
			"{ problem/asm/ClassFieldVisitor
			|
			- IClass currentClass \l
			| 
 			+ visitField(int arg0, String arg1, String arg2, String arg3, Object arg4) : FieldVisitor \l
			 addAccessLevel(int arg0, IField arg1) : void \l
			}" 
	]; 
	problemasmClassMethodVisitor [ 
		shape = "record",
		label = 
			"{ problem/asm/ClassMethodVisitor
			|
			- IClass currentClass \l
			| 
 			+ visitMethod(int arg0, String arg1, String arg2, String arg3, String[] arg4) : MethodVisitor \l
			 addAccessLevel(int arg0, IMethod arg1) : void \l
			 addReturnType(String arg0, IMethod arg1) : void \l
			 addArguments(String arg0, IMethod arg1) : void \l
			}" 
	]; 
	problemasmConcreteClass [ 
		shape = "record",
		label = 
			"{ problem/asm/ConcreteClass
			|
			- Collection methodList \l
			- Collection fieldList \l
			- int accessLevel \l
			- String signature \l
			- String name \l
			- double version \l
			- IClass superClass \l
			- Collection interfaceList \l
			- String extension \l
			| 
 			+ getIMethods() : Collection \l
			+ getIField() : Collection \l
			+ getAcessLevel() : int \l
			+ getSignature() : String \l
			+ getClassName() : String \l
			+ getClassVersion() : double \l
			+ getSuperName() : IClass \l
			+ getInterface() : Collection \l
			+ getExtension() : String \l
			+ addIMethod(IMethod arg0) : void \l
			+ addIField(IField arg0) : void \l
			+ setAccessLevel(int arg0) : void \l
			+ setSignature(String arg0) : void \l
			+ setClassName(String arg0) : void \l
			+ setClassVersion(double arg0) : void \l
			+ setSuperName(IClass arg0) : void \l
			+ addInterface(String arg0) : void \l
			+ setExtension(String arg0) : void \l
			}" 
	]; 
	problemasmDesignParser [ 
		shape = "record",
		label = 
			"{ problem/asm/DesignParser
			|
			- IClass currentClass \l
			- IModel model \l
			| 
 			+ main(String[] arg0) : void \l
			}" 
	]; 
	problemasmField [ 
		shape = "record",
		label = 
			"{ problem/asm/Field
			|
			- String name \l
			- String desc \l
			- String signature \l
			- Object value \l
			- String accessLevel \l
			| 
 			+ getName() : String \l
			+ setName(String arg0) : void \l
			+ getDesc() : String \l
			+ setDesc(String arg0) : void \l
			+ getSignature() : String \l
			+ setSignature(String arg0) : void \l
			+ getValue() : Object \l
			+ setValue(Object arg0) : void \l
			+ getAccessLevel() : String \l
			+ setAccessLevel(String arg0) : void \l
			}" 
	]; 
	problemasmIClass [ 
		shape = "record",
		label = 
			"{ problem/asm/IClass
			|
			| 
 			+ getIMethods() : Collection \l
			+ getIField() : Collection \l
			+ getAcessLevel() : int \l
			+ getSignature() : String \l
			+ getClassName() : String \l
			+ getClassVersion() : double \l
			+ getSuperName() : IClass \l
			+ getInterface() : Collection \l
			+ getExtension() : String \l
			+ addIMethod(IMethod arg0) : void \l
			+ addIField(IField arg0) : void \l
			+ setAccessLevel(int arg0) : void \l
			+ setSignature(String arg0) : void \l
			+ setClassName(String arg0) : void \l
			+ setClassVersion(double arg0) : void \l
			+ setSuperName(IClass arg0) : void \l
			+ addInterface(String arg0) : void \l
			+ setExtension(String arg0) : void \l
			+ toString() : String \l
			}" 
	]; 
	problemasmIField [ 
		shape = "record",
		label = 
			"{ problem/asm/IField
			|
			| 
 			+ getName() : String \l
			+ setName(String arg0) : void \l
			+ getDesc() : String \l
			+ setDesc(String arg0) : void \l
			+ getSignature() : String \l
			+ setSignature(String arg0) : void \l
			+ getValue() : Object \l
			+ setValue(Object arg0) : void \l
			+ getAccessLevel() : String \l
			+ setAccessLevel(String arg0) : void \l
			+ toString() : String \l
			}" 
	]; 
	problemasmIMethod [ 
		shape = "record",
		label = 
			"{ problem/asm/IMethod
			|
			| 
 			+ getName() : String \l
			+ setName(String arg0) : void \l
			+ getAccessLevel() : String \l
			+ setAccessLevel(String arg0) : void \l
			+ getDesc() : String \l
			+ setDesc(String arg0) : void \l
			+ getExceptions() : String[] \l
			+ setExceptions(String[] arg0) : void \l
			+ getReturnType() : String \l
			+ setReturnType(String arg0) : void \l
			+ addArgument(String arg0) : void \l
			+ getArguments() : List \l
			+ toString() : String \l
			}" 
	]; 
	problemasmIModel [ 
		shape = "record",
		label = 
			"{ problem/asm/IModel
			|
			| 
 			+ generateGraph() : void \l
			+ addClass(IClass arg0) : void \l
			+ getClasses() : ArrayList \l
			}" 
	]; 
	problemasmInterface [ 
		shape = "record",
		label = 
			"{ problem/asm/Interface
			|
			- Collection methodList \l
			- Collection fieldList \l
			- int accessLevel \l
			- String signature \l
			- String name \l
			- double version \l
			- IClass superClass \l
			- Collection interfaceList \l
			- String extension \l
			| 
 			+ getIMethods() : Collection \l
			+ getIField() : Collection \l
			+ getAcessLevel() : int \l
			+ getSignature() : String \l
			+ getClassName() : String \l
			+ getClassVersion() : double \l
			+ getSuperName() : IClass \l
			+ getInterface() : Collection \l
			+ getExtension() : String \l
			+ addIMethod(IMethod arg0) : void \l
			+ addIField(IField arg0) : void \l
			+ setAccessLevel(int arg0) : void \l
			+ setSignature(String arg0) : void \l
			+ setClassName(String arg0) : void \l
			+ setClassVersion(double arg0) : void \l
			+ setSuperName(IClass arg0) : void \l
			+ addInterface(String arg0) : void \l
			+ setExtension(String arg0) : void \l
			}" 
	]; 
	problemasmMethod [ 
		shape = "record",
		label = 
			"{ problem/asm/Method
			|
			- String name \l
			- String accessLevel \l
			- String desc \l
			- String[] exceptions \l
			- String returnType \l
			- List arguments \l
			| 
 			+ getName() : String \l
			+ setName(String arg0) : void \l
			+ getAccessLevel() : String \l
			+ setAccessLevel(String arg0) : void \l
			+ getDesc() : String \l
			+ setDesc(String arg0) : void \l
			+ getExceptions() : String[] \l
			+ setExceptions(String[] arg0) : void \l
			+ getReturnType() : String \l
			+ setReturnType(String arg0) : void \l
			+ addArgument(String arg0) : void \l
			+ getArguments() : List \l
			}" 
	]; 
	problemasmModel [ 
		shape = "record",
		label = 
			"{ problem/asm/Model
			|
			- ArrayList classes \l
			| 
 			+ generateGraph() : void \l
			- generateBoxObjects(IClass arg0) : String \l
			- generateArrows(IClass arg0) : String \l
			- addMethods(Collection arg0) : String \l
			- printMethod(IMethod arg0) : String \l
			- addFields(Collection arg0) : String \l
			- printFields(IField arg0) : String \l
			- trimValue(String arg0, String arg1) : String \l
			+ addClass(IClass arg0) : void \l
			+ getClasses() : ArrayList \l
			}" 
	]; 
	problemasmAbstractClass -> problemasmIClass
		[arrowhead="onormal", style="dashed"];
	problemasmClassDeclarationVisitor -> orgobjectwebasmClassVisitor
		[arrowhead="onormal"];
	problemasmClassFieldVisitor -> orgobjectwebasmClassVisitor
		[arrowhead="onormal"];
	problemasmClassMethodVisitor -> orgobjectwebasmClassVisitor
		[arrowhead="onormal"];
	problemasmConcreteClass -> problemasmIClass
		[arrowhead="onormal", style="dashed"];
	problemasmField -> problemasmIField
		[arrowhead="onormal", style="dashed"];
	problemasmInterface -> problemasmIClass
		[arrowhead="onormal", style="dashed"];
	problemasmMethod -> problemasmIMethod
		[arrowhead="onormal", style="dashed"];
	problemasmModel -> problemasmIModel
		[arrowhead="onormal", style="dashed"];

}