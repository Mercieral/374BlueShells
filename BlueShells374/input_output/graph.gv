digraph G {  rankdir=BT; 
 	problemasmClassMethodVisitor [ 
		shape = "record",
		label = 
			"{ problem/asm/ClassMethodVisitor
			|
			- Lproblem/asm/IClass;currentClass  \l
			\l| 
 			+ visitMethod(int arg0, java.lang.String arg1, java.lang.String arg2, java.lang.String arg3, java.lang.String[] arg4) : org.objectweb.asm.MethodVisitor \l
			 addAccessLevel(int arg0, problem.asm.IMethod arg1) : void \l
			 addReturnType(java.lang.String arg0, problem.asm.IMethod arg1) : void \l
			 addArguments(java.lang.String arg0, problem.asm.IMethod arg1) : void \l
			}" 
	]; 
	problemasmConcreteClass [ 
		shape = "record",
		label = 
			"{ problem/asm/ConcreteClass
			|
			- Ljava/util/Collection;methodList  \l
			- Ljava/util/Collection;fieldList  \l
			- IaccessLevel  \l
			- Ljava/lang/String;signature  \l
			- Ljava/lang/String;name  \l
			- Dversion  \l
			- Lproblem/asm/IClass;superClass  \l
			- Ljava/util/Collection;interfaceList  \l
			- Ljava/lang/String;extension  \l
			\l| 
 			+ getIMethods() : java.util.Collection \l
			+ getIField() : java.util.Collection \l
			+ getAcessLevel() : int \l
			+ getSignature() : java.lang.String \l
			+ getClassName() : java.lang.String \l
			+ getClassVersion() : double \l
			+ getSuperName() : problem.asm.IClass \l
			+ getInterface() : java.util.Collection \l
			+ getExtension() : java.lang.String \l
			+ addIMethod(problem.asm.IMethod arg0) : void \l
			+ addIField(problem.asm.IField arg0) : void \l
			+ setAccessLevel(int arg0) : void \l
			+ setSignature(java.lang.String arg0) : void \l
			+ setClassName(java.lang.String arg0) : void \l
			+ setClassVersion(double arg0) : void \l
			+ setSuperName(problem.asm.IClass arg0) : void \l
			+ addInterface(java.lang.String arg0) : void \l
			+ setExtension(java.lang.String arg0) : void \l
			}" 
	]; 
	problemasmClassMethodVisitor -> orgobjectwebasmClassVisitor
		[arrowhead="onormal"];
	problemasmConcreteClass -> problemasmIClass
		[arrowhead="onormal", style="dashed"];

}